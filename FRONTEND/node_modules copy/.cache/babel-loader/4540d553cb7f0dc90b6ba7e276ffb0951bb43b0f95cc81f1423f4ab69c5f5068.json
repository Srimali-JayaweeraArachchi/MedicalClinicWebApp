{"ast":null,"code":"var _jsxFileName = \"E:\\\\5th semester\\\\Software_Project\\\\MedicalClinicWebApp\\\\frontend\\\\src\\\\components\\\\Settings.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport '../styles/Settings.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Settings = () => {\n  _s();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [message, setMessage] = useState('');\n  const navigate = useNavigate();\n  const API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8070';\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (password && password !== confirmPassword) {\n      setMessage('Passwords do not match!');\n      return;\n    }\n    try {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        navigate('/'); // Redirect to login if not logged in\n        return;\n      }\n      const response = await fetch(`${API_BASE_URL}/api/doctors/settings`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          name,\n          email,\n          password\n        })\n      });\n      if (response.ok) {\n        setMessage('Profile updated successfully!');\n      } else {\n        const data = await response.json();\n        setMessage(data.message || 'Failed to update profile');\n      }\n    } catch (error) {\n      console.error('Error updating profile:', error);\n      setMessage('Error updating profile');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"settings-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Settings\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"message\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          value: name,\n          onChange: e => setName(e.target.value),\n          placeholder: \"Enter your new name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          placeholder: \"Enter your new email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          placeholder: \"Enter a new password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"confirmPassword\",\n          children: \"Confirm Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"confirmPassword\",\n          value: confirmPassword,\n          onChange: e => setConfirmPassword(e.target.value),\n          placeholder: \"Confirm your new password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"update-button\",\n        children: \"Update Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(Settings, \"1sCyEFa/fMGu6cnvJi+nTAD0dxA=\", false, function () {\n  return [useNavigate];\n});\n_c = Settings;\nexport default Settings;\n\n/*import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Settings = () => {\r\n  const [profile, setProfile] = useState({ fullName: '', email: '', password: '' });\r\n  const [message, setMessage] = useState('');\r\n\r\n  // Fetch current user profile on load\r\n  useEffect(() => {\r\n    const fetchProfile = async () => {\r\n      try {\r\n        const token = localStorage.getItem('token');\r\n        const response = await axios.get('/api/doctor/profile', {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        });\r\n        setProfile({ fullName: response.data.fullName, email: response.data.email, password: '' });\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    };\r\n\r\n    fetchProfile();\r\n  }, []);\r\n\r\n  // Handle form submission\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      const response = await axios.put(\r\n        '/api/doctor/update-profile',\r\n        { ...profile },\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n      setMessage(response.data.msg); // Show success message\r\n    } catch (error) {\r\n      console.error(error);\r\n      setMessage(error.response?.data?.msg || 'Error updating profile.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: '20px' }}>\r\n      <h2>Update Profile</h2>\r\n      {message && <p>{message}</p>}\r\n      <form onSubmit={handleSubmit}>\r\n        <div>\r\n          <label>Full Name:</label>\r\n          <input\r\n            type=\"text\"\r\n            value={profile.fullName}\r\n            onChange={(e) => setProfile({ ...profile, fullName: e.target.value })}\r\n            required\r\n          />\r\n        </div>\r\n        <div>\r\n          <label>Email:</label>\r\n          <input\r\n            type=\"email\"\r\n            value={profile.email}\r\n            onChange={(e) => setProfile({ ...profile, email: e.target.value })}\r\n            required\r\n          />\r\n        </div>\r\n        <div>\r\n          <label>Password (Optional):</label>\r\n          <input\r\n            type=\"password\"\r\n            value={profile.password}\r\n            onChange={(e) => setProfile({ ...profile, password: e.target.value })}\r\n          />\r\n        </div>\r\n        <button type=\"submit\">Update Profile</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Settings;*/\nvar _c;\n$RefreshReg$(_c, \"Settings\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","Settings","_s","name","setName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","message","setMessage","navigate","API_BASE_URL","process","env","REACT_APP_API_URL","handleSubmit","e","preventDefault","token","localStorage","getItem","response","fetch","method","headers","Authorization","body","JSON","stringify","ok","data","json","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","value","onChange","target","placeholder","_c","$RefreshReg$"],"sources":["E:/5th semester/Software_Project/MedicalClinicWebApp/frontend/src/components/Settings.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport '../styles/Settings.css';\r\n\r\nconst Settings = () => {\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [message, setMessage] = useState('');\r\n  const navigate = useNavigate();\r\n  const API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8070';\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (password && password !== confirmPassword) {\r\n      setMessage('Passwords do not match!');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      if (!token) {\r\n        navigate('/'); // Redirect to login if not logged in\r\n        return;\r\n      }\r\n\r\n      const response = await fetch(`${API_BASE_URL}/api/doctors/settings`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n        body: JSON.stringify({ name, email, password }),\r\n      });\r\n\r\n      if (response.ok) {\r\n        setMessage('Profile updated successfully!');\r\n      } else {\r\n        const data = await response.json();\r\n        setMessage(data.message || 'Failed to update profile');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error updating profile:', error);\r\n      setMessage('Error updating profile');\r\n    }\r\n  };\r\n\r\n  \r\n  return (\r\n    <div className=\"settings-page\">\r\n      <h2>Settings</h2>\r\n      {message && <p className=\"message\">{message}</p>}\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"name\">Name</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"name\"\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n            placeholder=\"Enter your new name\"\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"email\">Email</label>\r\n          <input\r\n            type=\"email\"\r\n            id=\"email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            placeholder=\"Enter your new email\"\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"password\">Password</label>\r\n          <input\r\n            type=\"password\"\r\n            id=\"password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            placeholder=\"Enter a new password\"\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"confirmPassword\">Confirm Password</label>\r\n          <input\r\n            type=\"password\"\r\n            id=\"confirmPassword\"\r\n            value={confirmPassword}\r\n            onChange={(e) => setConfirmPassword(e.target.value)}\r\n            placeholder=\"Confirm your new password\"\r\n          />\r\n        </div>\r\n        <button type=\"submit\" className=\"update-button\">Update Profile</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Settings;\r\n\r\n/*import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Settings = () => {\r\n  const [profile, setProfile] = useState({ fullName: '', email: '', password: '' });\r\n  const [message, setMessage] = useState('');\r\n\r\n  // Fetch current user profile on load\r\n  useEffect(() => {\r\n    const fetchProfile = async () => {\r\n      try {\r\n        const token = localStorage.getItem('token');\r\n        const response = await axios.get('/api/doctor/profile', {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        });\r\n        setProfile({ fullName: response.data.fullName, email: response.data.email, password: '' });\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    };\r\n\r\n    fetchProfile();\r\n  }, []);\r\n\r\n  // Handle form submission\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      const response = await axios.put(\r\n        '/api/doctor/update-profile',\r\n        { ...profile },\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n      setMessage(response.data.msg); // Show success message\r\n    } catch (error) {\r\n      console.error(error);\r\n      setMessage(error.response?.data?.msg || 'Error updating profile.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: '20px' }}>\r\n      <h2>Update Profile</h2>\r\n      {message && <p>{message}</p>}\r\n      <form onSubmit={handleSubmit}>\r\n        <div>\r\n          <label>Full Name:</label>\r\n          <input\r\n            type=\"text\"\r\n            value={profile.fullName}\r\n            onChange={(e) => setProfile({ ...profile, fullName: e.target.value })}\r\n            required\r\n          />\r\n        </div>\r\n        <div>\r\n          <label>Email:</label>\r\n          <input\r\n            type=\"email\"\r\n            value={profile.email}\r\n            onChange={(e) => setProfile({ ...profile, email: e.target.value })}\r\n            required\r\n          />\r\n        </div>\r\n        <div>\r\n          <label>Password (Optional):</label>\r\n          <input\r\n            type=\"password\"\r\n            value={profile.password}\r\n            onChange={(e) => setProfile({ ...profile, password: e.target.value })}\r\n          />\r\n        </div>\r\n        <button type=\"submit\">Update Profile</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Settings;*/\r\n\r\n"],"mappings":"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;QAAAC,YAAA;MAAA,OACC,CAAC,eACN1C,OAAA;QAAQ6C,IAAI,EAAC,QAAQ;QAACR,SAAS,EAAC,eAAe;QAAAC,QAAA,EAAC;MAAc;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAACxC,EAAA,CA9FID,QAAQ;EAAA,QAMKH,WAAW;AAAA;AAAAqD,EAAA,GANxBlD,QAAQ;AAgGd,eAAeA,QAAQ;;AAEvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA/EA,IAAAkD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}