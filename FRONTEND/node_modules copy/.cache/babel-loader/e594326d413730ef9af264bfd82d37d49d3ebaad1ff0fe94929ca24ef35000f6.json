{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\srimali\\\\Desktop\\\\Medical New\\\\MedicalClinicWebApp\\\\FRONTEND\\\\src\\\\components\\\\Prescriptions.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Sidebar from '../components/Sidebar';\nimport \"../styles/Prescriptions.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Prescriptions = () => {\n  _s();\n  const [patients, setPatients] = useState([]);\n  const [selectedPatient, setSelectedPatient] = useState(null);\n  const [prescription, setPrescription] = useState('');\n\n  // Fetch patients\n  useEffect(() => {\n    const fetchPatients = async () => {\n      const token = localStorage.getItem('token');\n      try {\n        const response = await fetch('http://localhost:8070/api/doctor/patients', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        const data = await response.json();\n        setPatients(data);\n      } catch (error) {\n        console.error('Error fetching patients:', error);\n      }\n    };\n    fetchPatients();\n  }, []);\n\n  // Handle prescription submission\n  const handleSubmit = async () => {\n    const token = localStorage.getItem('token');\n    const doctorName = localStorage.getItem('doctorName'); // Assume stored in token/session\n    try {\n      const response = await fetch('http://localhost:8070/api/doctor/prescriptions', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          patientName: selectedPatient.fullName,\n          doctorName,\n          content: prescription\n        })\n      });\n      if (response.ok) {\n        alert('Prescription saved successfully');\n        setPrescription('');\n      } else {\n        alert('Failed to save prescription');\n      }\n    } catch (error) {\n      console.error('Error saving prescription:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"prescriptions-page\",\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"prescriptions-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Prescriptions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Total Patients: \", patients.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"patients-list\",\n        children: patients.map(patient => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `patient-item ${(selectedPatient === null || selectedPatient === void 0 ? void 0 : selectedPatient._id) === patient._id ? 'active' : ''}`,\n          onClick: () => setSelectedPatient(patient),\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: patient.photo || 'default-avatar.png',\n            alt: \"Avatar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: patient.fullName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this)]\n        }, patient._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), selectedPatient && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"prescription-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Write Prescription for \", selectedPatient.fullName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          placeholder: \"Enter prescription details...\",\n          value: prescription,\n          onChange: e => setPrescription(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSubmit,\n          children: \"Submit Prescription\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(Prescriptions, \"iUwrDjFDKhW0HsJdX3iI8+++kmY=\");\n_c = Prescriptions;\nexport default Prescriptions;\nvar _c;\n$RefreshReg$(_c, \"Prescriptions\");","map":{"version":3,"names":["React","useEffect","useState","Sidebar","jsxDEV","_jsxDEV","Prescriptions","_s","patients","setPatients","selectedPatient","setSelectedPatient","prescription","setPrescription","fetchPatients","token","localStorage","getItem","response","fetch","headers","Authorization","data","json","error","console","handleSubmit","doctorName","method","body","JSON","stringify","patientName","fullName","content","ok","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","patient","_id","onClick","src","photo","alt","placeholder","value","onChange","e","target","_c","$RefreshReg$"],"sources":["C:/Users/srimali/Desktop/Medical New/MedicalClinicWebApp/FRONTEND/src/components/Prescriptions.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Sidebar from '../components/Sidebar';\r\nimport \"../styles/Prescriptions.css\";\r\n\r\nconst Prescriptions = () => {\r\n  const [patients, setPatients] = useState([]);\r\n  const [selectedPatient, setSelectedPatient] = useState(null);\r\n  const [prescription, setPrescription] = useState('');\r\n\r\n  // Fetch patients\r\n  useEffect(() => {\r\n    const fetchPatients = async () => {\r\n      const token = localStorage.getItem('token');\r\n      try {\r\n        const response = await fetch('http://localhost:8070/api/doctor/patients', {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        });\r\n        const data = await response.json();\r\n        setPatients(data);\r\n      } catch (error) {\r\n        console.error('Error fetching patients:', error);\r\n      }\r\n    };\r\n\r\n    fetchPatients();\r\n  }, []);\r\n\r\n  // Handle prescription submission\r\n  const handleSubmit = async () => {\r\n    const token = localStorage.getItem('token');\r\n    const doctorName = localStorage.getItem('doctorName'); // Assume stored in token/session\r\n    try {\r\n      const response = await fetch('http://localhost:8070/api/doctor/prescriptions', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n        body: JSON.stringify({\r\n          patientName: selectedPatient.fullName,\r\n          doctorName,\r\n          content: prescription,\r\n        }),\r\n      });\r\n\r\n      if (response.ok) {\r\n        alert('Prescription saved successfully');\r\n        setPrescription('');\r\n      } else {\r\n        alert('Failed to save prescription');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error saving prescription:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"prescriptions-page\">\r\n      <Sidebar />\r\n      <div className=\"prescriptions-content\">\r\n        <h2>Prescriptions</h2>\r\n        <h3>Total Patients: {patients.length}</h3>\r\n        <div className=\"patients-list\">\r\n          {patients.map((patient) => (\r\n            <div\r\n              key={patient._id}\r\n              className={`patient-item ${selectedPatient?._id === patient._id ? 'active' : ''}`}\r\n              onClick={() => setSelectedPatient(patient)}\r\n            >\r\n              <img src={patient.photo || 'default-avatar.png'} alt=\"Avatar\" />\r\n              <p>{patient.fullName}</p>\r\n            </div>\r\n          ))}\r\n        </div>\r\n        {selectedPatient && (\r\n          <div className=\"prescription-form\">\r\n            <h3>Write Prescription for {selectedPatient.fullName}</h3>\r\n            <textarea\r\n              placeholder=\"Enter prescription details...\"\r\n              value={prescription}\r\n              onChange={(e) => setPrescription(e.target.value)}\r\n            ></textarea>\r\n            <button onClick={handleSubmit}>Submit Prescription</button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Prescriptions;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}