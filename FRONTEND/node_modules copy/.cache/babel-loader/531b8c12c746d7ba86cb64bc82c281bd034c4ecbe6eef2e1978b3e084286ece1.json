{"ast":null,"code":"var _jsxFileName = \"E:\\\\5th semester\\\\Software_Project\\\\MedicalClinicWebApp\\\\FRONTEND\\\\src\\\\components\\\\SignupClinical.js\",\n  _s = $RefreshSig$();\n/*import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"../styles/signupClinical.css\";\r\n\r\nfunction SignupClinical() {\r\n  const [formData, setFormData] = useState({\r\n    fullName: \"\",\r\n    email: \"\",\r\n    phoneNumber: \"\",\r\n    staffIDNumber: \"\",\r\n    password: \"\",\r\n    passwordConfirmation: \"\",\r\n  });\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (formData.password !== formData.passwordConfirmation) {\r\n      alert(\"Passwords do not match!\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await axios.post(\"/api/signup/clinical\", formData);\r\n      if (response.data.success) {\r\n        alert(\"Clinical Staff registered successfully!\");\r\n      } else {\r\n        alert(\"Error registering Clinical Staff.\");\r\n      }\r\n    } catch (error) {\r\n      alert(\"Error signing up. Please try again.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"signup-clinical-container\">\r\n      <h2>Clinical Staff Signup</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Full Name\"\r\n          value={formData.fullName}\r\n          onChange={(e) => setFormData({ ...formData, fullName: e.target.value })}\r\n          required\r\n        />\r\n        <input\r\n          type=\"email\"\r\n          placeholder=\"Email\"\r\n          value={formData.email}\r\n          onChange={(e) => setFormData({ ...formData, email: e.target.value })}\r\n          required\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Phone Number\"\r\n          value={formData.phoneNumber}\r\n          onChange={(e) => setFormData({ ...formData, phoneNumber: e.target.value })}\r\n          required\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Staff ID Number\"\r\n          value={formData.staffIDNumber}\r\n          onChange={(e) => setFormData({ ...formData, staffIDNumber: e.target.value })}\r\n          required\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          value={formData.password}\r\n          onChange={(e) => setFormData({ ...formData, password: e.target.value })}\r\n          required\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Confirm Password\"\r\n          value={formData.passwordConfirmation}\r\n          onChange={(e) => setFormData({ ...formData, passwordConfirmation: e.target.value })}\r\n          required\r\n        />\r\n        <div className=\"terms\">\r\n          <input type=\"checkbox\" required /> \r\n          <label>I agree to the terms and conditions.</label>\r\n        </div>\r\n        <button type=\"submit\">Register</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SignupClinical;*/\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport \"../styles/signupClinical.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SignupClinical() {\n  _s();\n  const [formData, setFormData] = useState({\n    fullName: \"\",\n    email: \"\",\n    phoneNumber: \"\",\n    staffIDNumber: \"\",\n    password: \"\",\n    passwordConfirmation: \"\"\n  });\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (formData.password !== formData.passwordConfirmation) {\n      alert(\"Passwords do not match!\");\n      return;\n    }\n    try {\n      const response = await axios.post(\"http://localhost:8070/api/auth/signup/clinical\", formData); // Updated URL\n      if (response.status === 201) {\n        alert(\"Clinical Staff registered successfully!\");\n      } else {\n        alert(\"Error registering Clinical Staff.\");\n      }\n    } catch (error) {\n      console.error(\"Error during signup:\", error.response ? error.response.data : error.message); // Log error for debugging\n      alert(\"Error signing up. Please try again.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"signup-clinical-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Clinical Staff Signup\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Full Name\",\n        value: formData.fullName,\n        onChange: e => setFormData({\n          ...formData,\n          fullName: e.target.value\n        }),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"Email\",\n        value: formData.email,\n        onChange: e => setFormData({\n          ...formData,\n          email: e.target.value\n        }),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Phone Number\",\n        value: formData.phoneNumber,\n        onChange: e => setFormData({\n          ...formData,\n          phoneNumber: e.target.value\n        }),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Staff ID Number\",\n        value: formData.staffIDNumber,\n        onChange: e => setFormData({\n          ...formData,\n          staffIDNumber: e.target.value\n        }),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        value: formData.password,\n        onChange: e => setFormData({\n          ...formData,\n          password: e.target.value\n        }),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Confirm Password\",\n        value: formData.passwordConfirmation,\n        onChange: e => setFormData({\n          ...formData,\n          passwordConfirmation: e.target.value\n        }),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"terms\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"I agree to the terms and conditions.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 5\n  }, this);\n}\n_s(SignupClinical, \"wtMIdyQ/BC0Dq12+/Lms4uufYhg=\");\n_c = SignupClinical;\nexport default SignupClinical;\nvar _c;\n$RefreshReg$(_c, \"SignupClinical\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","SignupClinical","_s","formData","setFormData","fullName","email","phoneNumber","staffIDNumber","password","passwordConfirmation","handleSubmit","e","preventDefault","alert","response","post","status","error","console","data","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","required","_c","$RefreshReg$"],"sources":["E:/5th semester/Software_Project/MedicalClinicWebApp/FRONTEND/src/components/SignupClinical.js"],"sourcesContent":["/*import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"../styles/signupClinical.css\";\r\n\r\nfunction SignupClinical() {\r\n  const [formData, setFormData] = useState({\r\n    fullName: \"\",\r\n    email: \"\",\r\n    phoneNumber: \"\",\r\n    staffIDNumber: \"\",\r\n    password: \"\",\r\n    passwordConfirmation: \"\",\r\n  });\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (formData.password !== formData.passwordConfirmation) {\r\n      alert(\"Passwords do not match!\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await axios.post(\"/api/signup/clinical\", formData);\r\n      if (response.data.success) {\r\n        alert(\"Clinical Staff registered successfully!\");\r\n      } else {\r\n        alert(\"Error registering Clinical Staff.\");\r\n      }\r\n    } catch (error) {\r\n      alert(\"Error signing up. Please try again.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"signup-clinical-container\">\r\n      <h2>Clinical Staff Signup</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Full Name\"\r\n          value={formData.fullName}\r\n          onChange={(e) => setFormData({ ...formData, fullName: e.target.value })}\r\n          required\r\n        />\r\n        <input\r\n          type=\"email\"\r\n          placeholder=\"Email\"\r\n          value={formData.email}\r\n          onChange={(e) => setFormData({ ...formData, email: e.target.value })}\r\n          required\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Phone Number\"\r\n          value={formData.phoneNumber}\r\n          onChange={(e) => setFormData({ ...formData, phoneNumber: e.target.value })}\r\n          required\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Staff ID Number\"\r\n          value={formData.staffIDNumber}\r\n          onChange={(e) => setFormData({ ...formData, staffIDNumber: e.target.value })}\r\n          required\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          value={formData.password}\r\n          onChange={(e) => setFormData({ ...formData, password: e.target.value })}\r\n          required\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Confirm Password\"\r\n          value={formData.passwordConfirmation}\r\n          onChange={(e) => setFormData({ ...formData, passwordConfirmation: e.target.value })}\r\n          required\r\n        />\r\n        <div className=\"terms\">\r\n          <input type=\"checkbox\" required /> \r\n          <label>I agree to the terms and conditions.</label>\r\n        </div>\r\n        <button type=\"submit\">Register</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SignupClinical;*/\r\n\r\nimport React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"../styles/signupClinical.css\";\r\n\r\nfunction SignupClinical() {\r\n  const [formData, setFormData] = useState({\r\n    fullName: \"\",\r\n    email: \"\",\r\n    phoneNumber: \"\",\r\n    staffIDNumber: \"\",\r\n    password: \"\",\r\n    passwordConfirmation: \"\",\r\n  });\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (formData.password !== formData.passwordConfirmation) {\r\n      alert(\"Passwords do not match!\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await axios.post(\"http://localhost:8070/api/auth/signup/clinical\", formData); // Updated URL\r\n      if (response.status === 201) {\r\n        alert(\"Clinical Staff registered successfully!\");\r\n      } else {\r\n        alert(\"Error registering Clinical Staff.\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error during signup:\", error.response ? error.response.data : error.message); // Log error for debugging\r\n      alert(\"Error signing up. Please try again.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"signup-clinical-container\">\r\n      <h2>Clinical Staff Signup</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Full Name\"\r\n          value={formData.fullName}\r\n          onChange={(e) => setFormData({ ...formData, fullName: e.target.value })}\r\n          required\r\n        />\r\n        <input\r\n          type=\"email\"\r\n          placeholder=\"Email\"\r\n          value={formData.email}\r\n          onChange={(e) => setFormData({ ...formData, email: e.target.value })}\r\n          required\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Phone Number\"\r\n          value={formData.phoneNumber}\r\n          onChange={(e) => setFormData({ ...formData, phoneNumber: e.target.value })}\r\n          required\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Staff ID Number\"\r\n          value={formData.staffIDNumber}\r\n          onChange={(e) => setFormData({ ...formData, staffIDNumber: e.target.value })}\r\n          required\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          value={formData.password}\r\n          onChange={(e) => setFormData({ ...formData, password: e.target.value })}\r\n          required\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Confirm Password\"\r\n          value={formData.passwordConfirmation}\r\n          onChange={(e) => setFormData({ ...formData, passwordConfirmation: e.target.value })}\r\n          required\r\n        />\r\n        <div className=\"terms\">\r\n          <input type=\"checkbox\" required /> \r\n          <label>I agree to the terms and conditions.</label>\r\n        </div>\r\n        <button type=\"submit\">Register</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SignupClinical;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}