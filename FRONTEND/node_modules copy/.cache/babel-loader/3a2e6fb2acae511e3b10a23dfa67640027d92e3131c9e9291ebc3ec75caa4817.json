{"ast":null,"code":"var _jsxFileName = \"E:\\\\5th semester\\\\Software_Project\\\\MedicalClinicWebApp\\\\frontend\\\\src\\\\components\\\\Appointments.js\",\n  _s = $RefreshSig$();\n/*import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport '../styles/Appointments.css'; // Ensure the CSS matches your provided design\r\n\r\nfunction Appointments() {\r\n  const [appointments, setAppointments] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState('');\r\n  const navigate = useNavigate();\r\n  const API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8070';\r\n\r\n  useEffect(() => {\r\n    const fetchAppointments = async () => {\r\n      const token = localStorage.getItem('token');\r\n      if (!token) {\r\n        navigate('/'); // Redirect to login if no token\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const response = await fetch(`${API_BASE_URL}/api/appointments`, {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        });\r\n\r\n        if (!response.ok) {\r\n          if (response.status === 401) {\r\n            setError('Session expired. Please log in again.');\r\n            localStorage.removeItem('token');\r\n            navigate('/');\r\n          } else {\r\n            throw new Error('Failed to fetch appointments');\r\n          }\r\n        } else {\r\n          const data = await response.json();\r\n          setAppointments(data);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching appointments:', error);\r\n        setError('Failed to load appointments. Please try again.');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchAppointments();\r\n  }, [navigate, API_BASE_URL]);\r\n\r\n  return (\r\n    <div className=\"appointments-page\">\r\n      <h2>Today Appointments</h2>\r\n      <p>Totally {appointments.length} appointments</p>\r\n      {loading ? (\r\n        <div className=\"loading\">Loading...</div>\r\n      ) : error ? (\r\n        <div>\r\n          <p className=\"error\">{error}</p>\r\n          <button onClick={() => window.location.reload()}>Retry</button>\r\n        </div>\r\n      ) : (\r\n        <div className=\"appointments-container\">\r\n          {appointments.map((appointment) => (\r\n            <div key={appointment.id} className=\"appointment-card\">\r\n              <div className=\"appointment-details\">\r\n                <div className=\"appointment-avatar\">\r\n                  \r\n                  <div className=\"avatar-circle\">\r\n                    {appointment.name.charAt(0)}\r\n                  </div>\r\n                </div>\r\n                <div>\r\n                  <p className=\"appointment-name\">{appointment.name}</p>\r\n                  <p className=\"appointment-time\">{appointment.time}</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Appointments;*/\n\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Sidebar from './Sidebar'; // Import the Sidebar component\nimport '../styles/Appointments.css'; // Ensure the CSS matches your provided design\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Appointments() {\n  _s();\n  const [appointments, setAppointments] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n  const API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8070';\n  useEffect(() => {\n    const fetchAppointments = async () => {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        navigate('/'); // Redirect to login if no token\n        return;\n      }\n      try {\n        const response = await fetch(`${API_BASE_URL}/api/appointments`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        if (!response.ok) {\n          if (response.status === 401) {\n            setError('Session expired. Please log in again.');\n            localStorage.removeItem('token');\n            navigate('/');\n          } else {\n            throw new Error('Failed to fetch appointments');\n          }\n        } else {\n          const data = await response.json();\n          setAppointments(data);\n        }\n      } catch (error) {\n        console.error('Error fetching appointments:', error);\n        setError('Failed to load appointments. Please try again.');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchAppointments();\n  }, [navigate, API_BASE_URL]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"appointments-page-container\",\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"appointments-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Today's Appointments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Totally \", appointments.length, \" appointments\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading\",\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 11\n      }, this) : error ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => window.location.reload(),\n          children: \"Retry\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"appointments-container\",\n        children: appointments.map(appointment => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"appointment-card\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"appointment-details\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"appointment-avatar\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"avatar-circle\",\n                children: appointment.name.charAt(0)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"appointment-name\",\n                children: appointment.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"appointment-time\",\n                children: appointment.time\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 17\n          }, this)\n        }, appointment.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 5\n  }, this);\n}\n_s(Appointments, \"W3CDzVz1VpYEDTXC6hdGEajnqrk=\", false, function () {\n  return [useNavigate];\n});\n_c = Appointments;\nexport default Appointments;\nvar _c;\n$RefreshReg$(_c, \"Appointments\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","Sidebar","jsxDEV","_jsxDEV","Appointments","_s","appointments","setAppointments","loading","setLoading","error","setError","navigate","API_BASE_URL","process","env","REACT_APP_API_URL","fetchAppointments","token","localStorage","getItem","response","fetch","headers","Authorization","ok","status","removeItem","Error","data","json","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","onClick","window","location","reload","map","appointment","name","charAt","time","id","_c","$RefreshReg$"],"sources":["E:/5th semester/Software_Project/MedicalClinicWebApp/frontend/src/components/Appointments.js"],"sourcesContent":["/*import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport '../styles/Appointments.css'; // Ensure the CSS matches your provided design\r\n\r\nfunction Appointments() {\r\n  const [appointments, setAppointments] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState('');\r\n  const navigate = useNavigate();\r\n  const API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8070';\r\n\r\n  useEffect(() => {\r\n    const fetchAppointments = async () => {\r\n      const token = localStorage.getItem('token');\r\n      if (!token) {\r\n        navigate('/'); // Redirect to login if no token\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const response = await fetch(`${API_BASE_URL}/api/appointments`, {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        });\r\n\r\n        if (!response.ok) {\r\n          if (response.status === 401) {\r\n            setError('Session expired. Please log in again.');\r\n            localStorage.removeItem('token');\r\n            navigate('/');\r\n          } else {\r\n            throw new Error('Failed to fetch appointments');\r\n          }\r\n        } else {\r\n          const data = await response.json();\r\n          setAppointments(data);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching appointments:', error);\r\n        setError('Failed to load appointments. Please try again.');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchAppointments();\r\n  }, [navigate, API_BASE_URL]);\r\n\r\n  return (\r\n    <div className=\"appointments-page\">\r\n      <h2>Today Appointments</h2>\r\n      <p>Totally {appointments.length} appointments</p>\r\n      {loading ? (\r\n        <div className=\"loading\">Loading...</div>\r\n      ) : error ? (\r\n        <div>\r\n          <p className=\"error\">{error}</p>\r\n          <button onClick={() => window.location.reload()}>Retry</button>\r\n        </div>\r\n      ) : (\r\n        <div className=\"appointments-container\">\r\n          {appointments.map((appointment) => (\r\n            <div key={appointment.id} className=\"appointment-card\">\r\n              <div className=\"appointment-details\">\r\n                <div className=\"appointment-avatar\">\r\n                  \r\n                  <div className=\"avatar-circle\">\r\n                    {appointment.name.charAt(0)}\r\n                  </div>\r\n                </div>\r\n                <div>\r\n                  <p className=\"appointment-name\">{appointment.name}</p>\r\n                  <p className=\"appointment-time\">{appointment.time}</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Appointments;*/\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Sidebar from './Sidebar'; // Import the Sidebar component\r\nimport '../styles/Appointments.css'; // Ensure the CSS matches your provided design\r\n\r\nfunction Appointments() {\r\n  const [appointments, setAppointments] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState('');\r\n  const navigate = useNavigate();\r\n  const API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8070';\r\n\r\n  useEffect(() => {\r\n    const fetchAppointments = async () => {\r\n      const token = localStorage.getItem('token');\r\n      if (!token) {\r\n        navigate('/'); // Redirect to login if no token\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const response = await fetch(`${API_BASE_URL}/api/appointments`, {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        });\r\n\r\n        if (!response.ok) {\r\n          if (response.status === 401) {\r\n            setError('Session expired. Please log in again.');\r\n            localStorage.removeItem('token');\r\n            navigate('/');\r\n          } else {\r\n            throw new Error('Failed to fetch appointments');\r\n          }\r\n        } else {\r\n          const data = await response.json();\r\n          setAppointments(data);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching appointments:', error);\r\n        setError('Failed to load appointments. Please try again.');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchAppointments();\r\n  }, [navigate, API_BASE_URL]);\r\n\r\n  return (\r\n    <div className=\"appointments-page-container\">\r\n      {/* Sidebar */}\r\n      <Sidebar />\r\n\r\n      {/* Main Content */}\r\n      <div className=\"appointments-content\">\r\n        <h2>Today's Appointments</h2>\r\n        <p>Totally {appointments.length} appointments</p>\r\n        {loading ? (\r\n          <div className=\"loading\">Loading...</div>\r\n        ) : error ? (\r\n          <div>\r\n            <p className=\"error\">{error}</p>\r\n            <button onClick={() => window.location.reload()}>Retry</button>\r\n          </div>\r\n        ) : (\r\n          <div className=\"appointments-container\">\r\n            {appointments.map((appointment) => (\r\n              <div key={appointment.id} className=\"appointment-card\">\r\n                <div className=\"appointment-details\">\r\n                  <div className=\"appointment-avatar\">\r\n                    <div className=\"avatar-circle\">\r\n                      {appointment.name.charAt(0)}\r\n                    </div>\r\n                  </div>\r\n                  <div>\r\n                    <p className=\"appointment-name\">{appointment.name}</p>\r\n                    <p className=\"appointment-time\">{appointment.time}</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Appointments;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}