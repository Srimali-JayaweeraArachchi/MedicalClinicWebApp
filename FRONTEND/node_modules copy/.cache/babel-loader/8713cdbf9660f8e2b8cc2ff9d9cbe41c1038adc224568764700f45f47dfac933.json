{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\srimali\\\\Desktop\\\\Medical New\\\\MedicalClinicWebApp\\\\FRONTEND\\\\src\\\\components\\\\Settings.js\",\n  _s = $RefreshSig$();\n/*import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Sidebar from './Sidebar'; // Ensure Sidebar is properly imported\r\nimport '../styles/Settings.css';\r\n\r\nfunction Settings() {\r\n  const [formData, setFormData] = useState({\r\n    fullName: '',\r\n    email: '',\r\n    phoneNumber: '',\r\n    specialization: '',\r\n    yearsOfExperience: '',\r\n  });\r\n\r\n  const [message, setMessage] = useState('');\r\n  const [error, setError] = useState('');\r\n  const [showModal, setShowModal] = useState(false); // State for modal visibility\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const fetchProfile = async () => {\r\n      const token = localStorage.getItem('token');\r\n      if (!token) {\r\n        navigate('/'); // Redirect to login if not authenticated\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const response = await fetch('http://localhost:8070/api/doctors/profile', {\r\n          headers: { Authorization: Bearer ${token} },\r\n        });\r\n\r\n        if (response.ok) {\r\n          const data = await response.json();\r\n          setFormData({\r\n            fullName: data.fullName || '',\r\n            email: data.email || '',\r\n            phoneNumber: data.phoneNumber || '',\r\n            specialization: data.specialization || '',\r\n            yearsOfExperience: data.yearsOfExperience || '',\r\n          });\r\n        } else {\r\n          throw new Error('Failed to fetch profile');\r\n        }\r\n      } catch (error) {\r\n        setError('Failed to load profile');\r\n        console.error(error);\r\n      }\r\n    };\r\n\r\n    fetchProfile();\r\n  }, [navigate]);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData((prevState) => ({\r\n      ...prevState,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const token = localStorage.getItem('token');\r\n    if (!token) {\r\n      navigate('/');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:8070/api/doctors/update-profile', {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: Bearer ${token},\r\n        },\r\n        body: JSON.stringify(formData),\r\n      });\r\n\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        setMessage(data.msg);\r\n        setShowModal(true); // Show modal on success\r\n      } else {\r\n        throw new Error('Failed to update profile');\r\n      }\r\n    } catch (error) {\r\n      setError('Profile update failed');\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setShowModal(false); // Close the modal\r\n  };\r\n\r\n  return (\r\n    <div className=\"settings-page-container\">\r\n      <Sidebar />\r\n      <div className=\"settings-content\">\r\n        <h2>Settings</h2>\r\n        <p>Update your profile information below:</p>\r\n        {error && <p className=\"error-message\">{error}</p>}\r\n        <form onSubmit={handleSubmit}>\r\n          <div className=\"form-group\">\r\n            <label>Full Name</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"fullName\"\r\n              value={formData.fullName}\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>Email</label>\r\n            <input\r\n              type=\"email\"\r\n              name=\"email\"\r\n              value={formData.email}\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>Phone Number</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"phoneNumber\"\r\n              value={formData.phoneNumber}\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>Specialization</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"specialization\"\r\n              value={formData.specialization}\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>Years of Experience</label>\r\n            <input\r\n              type=\"number\"\r\n              name=\"yearsOfExperience\"\r\n              value={formData.yearsOfExperience}\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n          </div>\r\n          <button type=\"submit\" className=\"save-button\">\r\n            Save Changes\r\n          </button>\r\n        </form>\r\n\r\n        \r\n        {showModal && (\r\n          <div className=\"modal-overlay\">\r\n            <div className=\"modal\">\r\n              <h3>Profile updated successfully!</h3>\r\n              <p>{message}</p>\r\n              <button onClick={closeModal} className=\"close-modal-button\">\r\n                OK\r\n              </button>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Settings;*/\n\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Sidebar from './Sidebar';\nimport '../styles/Settings.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Settings() {\n  _s();\n  const [formData, setFormData] = useState({\n    fullName: '',\n    email: '',\n    phoneNumber: '',\n    specialization: '',\n    yearsOfExperience: ''\n  });\n  const [passwordData, setPasswordData] = useState({\n    oldPassword: '',\n    newPassword: ''\n  });\n  const [message, setMessage] = useState('');\n  const [passwordMessage, setPasswordMessage] = useState('');\n  const [error, setError] = useState('');\n  const [passwordError, setPasswordError] = useState('');\n  const [showModal, setShowModal] = useState(false); // State for modal visibility\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchProfile = async () => {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        navigate('/'); // Redirect to login if not authenticated\n        return;\n      }\n      try {\n        const response = await fetch('http://localhost:8070/api/doctors/profile', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        if (response.ok) {\n          const data = await response.json();\n          setFormData({\n            fullName: data.fullName || '',\n            email: data.email || '',\n            phoneNumber: data.phoneNumber || '',\n            specialization: data.specialization || '',\n            yearsOfExperience: data.yearsOfExperience || ''\n          });\n        } else {\n          throw new Error('Failed to fetch profile');\n        }\n      } catch (error) {\n        setError('Failed to load profile');\n        console.error(error);\n      }\n    };\n    fetchProfile();\n  }, [navigate]);\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prevState => ({\n      ...prevState,\n      [name]: value\n    }));\n  };\n  const handlePasswordChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setPasswordData(prevState => ({\n      ...prevState,\n      [name]: value\n    }));\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const token = localStorage.getItem('token');\n    if (!token) {\n      navigate('/');\n      return;\n    }\n    try {\n      const response = await fetch('http://localhost:8070/api/doctors/update-profile', {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify(formData)\n      });\n      if (response.ok) {\n        const data = await response.json();\n        setMessage(data.msg);\n        setShowModal(true); // Show modal on success\n      } else {\n        throw new Error('Failed to update profile');\n      }\n    } catch (error) {\n      setError('Profile update failed');\n      console.error(error);\n    }\n  };\n  const handlePasswordSubmit = async e => {\n    e.preventDefault();\n    const token = localStorage.getItem('token');\n    if (!token) {\n      navigate('/');\n      return;\n    }\n    try {\n      const response = await fetch('http://localhost:8070/api/doctors/change-password', {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify(passwordData)\n      });\n      if (response.ok) {\n        const data = await response.json();\n        setPasswordMessage(data.message);\n        setPasswordData({\n          oldPassword: '',\n          newPassword: ''\n        });\n      } else {\n        const errorData = await response.json();\n        setPasswordError(errorData.message || 'Failed to change password');\n      }\n    } catch (error) {\n      setPasswordError('An error occurred while changing the password');\n      console.error(error);\n    }\n  };\n  const closeModal = () => {\n    setShowModal(false); // Close the modal\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"settings-page-container\",\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"settings-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Settings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Update your profile information below\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Full Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"fullName\",\n            value: formData.fullName,\n            onChange: handleChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            name: \"email\",\n            value: formData.email,\n            onChange: handleChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Phone Number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"phoneNumber\",\n            value: formData.phoneNumber,\n            onChange: handleChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Specialization\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 361,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"specialization\",\n            value: formData.specialization,\n            onChange: handleChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Years of Experience\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            name: \"yearsOfExperience\",\n            value: formData.yearsOfExperience,\n            onChange: handleChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"save-button\",\n          children: \"Save Changes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 380,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Change Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 9\n      }, this), passwordError && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-message\",\n        children: passwordError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 27\n      }, this), passwordMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"success-message\",\n        children: passwordMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handlePasswordSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Old Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 392,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            name: \"oldPassword\",\n            value: passwordData.oldPassword,\n            onChange: handlePasswordChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 393,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 391,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"New Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 402,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            name: \"newPassword\",\n            value: passwordData.newPassword,\n            onChange: handlePasswordChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 403,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"save-button\",\n          children: \"Change Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 9\n      }, this), showModal && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-overlay\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Profile updated successfully!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 420,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 421,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: closeModal,\n            className: \"close-modal-button\",\n            children: \"OK\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 422,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 323,\n    columnNumber: 5\n  }, this);\n}\n_s(Settings, \"E6zqJw0VNyOgZBh4c6P57zN28k0=\", false, function () {\n  return [useNavigate];\n});\n_c = Settings;\nexport default Settings;\nvar _c;\n$RefreshReg$(_c, \"Settings\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","Sidebar","jsxDEV","_jsxDEV","Settings","_s","formData","setFormData","fullName","email","phoneNumber","specialization","yearsOfExperience","passwordData","setPasswordData","oldPassword","newPassword","message","setMessage","passwordMessage","setPasswordMessage","error","setError","passwordError","setPasswordError","showModal","setShowModal","navigate","fetchProfile","token","localStorage","getItem","response","fetch","headers","Authorization","ok","data","json","Error","console","handleChange","e","name","value","target","prevState","handlePasswordChange","handleSubmit","preventDefault","method","body","JSON","stringify","msg","handlePasswordSubmit","errorData","closeModal","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","required","onClick","_c","$RefreshReg$"],"sources":["C:/Users/srimali/Desktop/Medical New/MedicalClinicWebApp/FRONTEND/src/components/Settings.js"],"sourcesContent":["/*import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Sidebar from './Sidebar'; // Ensure Sidebar is properly imported\r\nimport '../styles/Settings.css';\r\n\r\nfunction Settings() {\r\n  const [formData, setFormData] = useState({\r\n    fullName: '',\r\n    email: '',\r\n    phoneNumber: '',\r\n    specialization: '',\r\n    yearsOfExperience: '',\r\n  });\r\n\r\n  const [message, setMessage] = useState('');\r\n  const [error, setError] = useState('');\r\n  const [showModal, setShowModal] = useState(false); // State for modal visibility\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const fetchProfile = async () => {\r\n      const token = localStorage.getItem('token');\r\n      if (!token) {\r\n        navigate('/'); // Redirect to login if not authenticated\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const response = await fetch('http://localhost:8070/api/doctors/profile', {\r\n          headers: { Authorization: Bearer ${token} },\r\n        });\r\n\r\n        if (response.ok) {\r\n          const data = await response.json();\r\n          setFormData({\r\n            fullName: data.fullName || '',\r\n            email: data.email || '',\r\n            phoneNumber: data.phoneNumber || '',\r\n            specialization: data.specialization || '',\r\n            yearsOfExperience: data.yearsOfExperience || '',\r\n          });\r\n        } else {\r\n          throw new Error('Failed to fetch profile');\r\n        }\r\n      } catch (error) {\r\n        setError('Failed to load profile');\r\n        console.error(error);\r\n      }\r\n    };\r\n\r\n    fetchProfile();\r\n  }, [navigate]);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData((prevState) => ({\r\n      ...prevState,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const token = localStorage.getItem('token');\r\n    if (!token) {\r\n      navigate('/');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:8070/api/doctors/update-profile', {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: Bearer ${token},\r\n        },\r\n        body: JSON.stringify(formData),\r\n      });\r\n\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        setMessage(data.msg);\r\n        setShowModal(true); // Show modal on success\r\n      } else {\r\n        throw new Error('Failed to update profile');\r\n      }\r\n    } catch (error) {\r\n      setError('Profile update failed');\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setShowModal(false); // Close the modal\r\n  };\r\n\r\n  return (\r\n    <div className=\"settings-page-container\">\r\n      <Sidebar />\r\n      <div className=\"settings-content\">\r\n        <h2>Settings</h2>\r\n        <p>Update your profile information below:</p>\r\n        {error && <p className=\"error-message\">{error}</p>}\r\n        <form onSubmit={handleSubmit}>\r\n          <div className=\"form-group\">\r\n            <label>Full Name</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"fullName\"\r\n              value={formData.fullName}\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>Email</label>\r\n            <input\r\n              type=\"email\"\r\n              name=\"email\"\r\n              value={formData.email}\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>Phone Number</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"phoneNumber\"\r\n              value={formData.phoneNumber}\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>Specialization</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"specialization\"\r\n              value={formData.specialization}\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>Years of Experience</label>\r\n            <input\r\n              type=\"number\"\r\n              name=\"yearsOfExperience\"\r\n              value={formData.yearsOfExperience}\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n          </div>\r\n          <button type=\"submit\" className=\"save-button\">\r\n            Save Changes\r\n          </button>\r\n        </form>\r\n\r\n        \r\n        {showModal && (\r\n          <div className=\"modal-overlay\">\r\n            <div className=\"modal\">\r\n              <h3>Profile updated successfully!</h3>\r\n              <p>{message}</p>\r\n              <button onClick={closeModal} className=\"close-modal-button\">\r\n                OK\r\n              </button>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Settings;*/\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Sidebar from './Sidebar'; \r\nimport '../styles/Settings.css';\r\n\r\nfunction Settings() {\r\n  const [formData, setFormData] = useState({\r\n    fullName: '',\r\n    email: '',\r\n    phoneNumber: '',\r\n    specialization: '',\r\n    yearsOfExperience: '',\r\n  });\r\n\r\n  const [passwordData, setPasswordData] = useState({\r\n    oldPassword: '',\r\n    newPassword: '',\r\n  });\r\n\r\n  const [message, setMessage] = useState('');\r\n  const [passwordMessage, setPasswordMessage] = useState('');\r\n  const [error, setError] = useState('');\r\n  const [passwordError, setPasswordError] = useState('');\r\n  const [showModal, setShowModal] = useState(false); // State for modal visibility\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const fetchProfile = async () => {\r\n      const token = localStorage.getItem('token');\r\n      if (!token) {\r\n        navigate('/'); // Redirect to login if not authenticated\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const response = await fetch('http://localhost:8070/api/doctors/profile', {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        });\r\n\r\n        if (response.ok) {\r\n          const data = await response.json();\r\n          setFormData({\r\n            fullName: data.fullName || '',\r\n            email: data.email || '',\r\n            phoneNumber: data.phoneNumber || '',\r\n            specialization: data.specialization || '',\r\n            yearsOfExperience: data.yearsOfExperience || '',\r\n          });\r\n        } else {\r\n          throw new Error('Failed to fetch profile');\r\n        }\r\n      } catch (error) {\r\n        setError('Failed to load profile');\r\n        console.error(error);\r\n      }\r\n    };\r\n\r\n    fetchProfile();\r\n  }, [navigate]);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData((prevState) => ({\r\n      ...prevState,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const handlePasswordChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setPasswordData((prevState) => ({\r\n      ...prevState,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const token = localStorage.getItem('token');\r\n    if (!token) {\r\n      navigate('/');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:8070/api/doctors/update-profile', {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n        body: JSON.stringify(formData),\r\n      });\r\n\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        setMessage(data.msg);\r\n        setShowModal(true); // Show modal on success\r\n      } else {\r\n        throw new Error('Failed to update profile');\r\n      }\r\n    } catch (error) {\r\n      setError('Profile update failed');\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const handlePasswordSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const token = localStorage.getItem('token');\r\n    if (!token) {\r\n      navigate('/');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:8070/api/doctors/change-password', {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n        body: JSON.stringify(passwordData),\r\n      });\r\n\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        setPasswordMessage(data.message);\r\n        setPasswordData({ oldPassword: '', newPassword: '' });\r\n      } else {\r\n        const errorData = await response.json();\r\n        setPasswordError(errorData.message || 'Failed to change password');\r\n      }\r\n    } catch (error) {\r\n      setPasswordError('An error occurred while changing the password');\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setShowModal(false); // Close the modal\r\n  };\r\n\r\n  return (\r\n    <div className=\"settings-page-container\">\r\n      <Sidebar />\r\n      <div className=\"settings-content\">\r\n        <h2>Settings</h2>\r\n        <p>Update your profile information below</p>\r\n        {error && <p className=\"error-message\">{error}</p>}\r\n        <form onSubmit={handleSubmit}>\r\n          <div className=\"form-group\">\r\n            <label>Full Name</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"fullName\"\r\n              value={formData.fullName}\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>Email</label>\r\n            <input\r\n              type=\"email\"\r\n              name=\"email\"\r\n              value={formData.email}\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>Phone Number</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"phoneNumber\"\r\n              value={formData.phoneNumber}\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>Specialization</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"specialization\"\r\n              value={formData.specialization}\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>Years of Experience</label>\r\n            <input\r\n              type=\"number\"\r\n              name=\"yearsOfExperience\"\r\n              value={formData.yearsOfExperience}\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n          </div>\r\n          <button type=\"submit\" className=\"save-button\">\r\n            Save Changes\r\n          </button>\r\n        </form>\r\n\r\n        <hr />\r\n\r\n        <h3>Change Password</h3>\r\n        {passwordError && <p className=\"error-message\">{passwordError}</p>}\r\n        {passwordMessage && <p className=\"success-message\">{passwordMessage}</p>}\r\n        <form onSubmit={handlePasswordSubmit}>\r\n          <div className=\"form-group\">\r\n            <label>Old Password</label>\r\n            <input\r\n              type=\"password\"\r\n              name=\"oldPassword\"\r\n              value={passwordData.oldPassword}\r\n              onChange={handlePasswordChange}\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>New Password</label>\r\n            <input\r\n              type=\"password\"\r\n              name=\"newPassword\"\r\n              value={passwordData.newPassword}\r\n              onChange={handlePasswordChange}\r\n              required\r\n            />\r\n          </div>\r\n          <button type=\"submit\" className=\"save-button\">\r\n            Change Password\r\n          </button>\r\n        </form>\r\n\r\n        {/* Modal for Success Message */}\r\n        {showModal && (\r\n          <div className=\"modal-overlay\">\r\n            <div className=\"modal\">\r\n              <h3>Profile updated successfully!</h3>\r\n              <p>{message}</p>\r\n              <button onClick={closeModal} className=\"close-modal-button\">\r\n                OK\r\n              </button>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Settings;"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}