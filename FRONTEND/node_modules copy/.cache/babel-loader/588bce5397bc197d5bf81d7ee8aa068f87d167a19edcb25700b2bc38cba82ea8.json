{"ast":null,"code":"var _jsxFileName = \"E:\\\\5th semester\\\\Software_Project\\\\MedicalClinicWebApp\\\\FRONTEND\\\\src\\\\components\\\\Login.js\",\n  _s = $RefreshSig$();\n/*import React, { useState } from 'react';\r\nimport { login } from '../api';\r\nimport './Login.css'; // Create a separate CSS file for styling\r\n\r\nconst Login = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setErrorMessage('');\r\n\r\n    try {\r\n      const response = await login({ email, password });\r\n      // Handle successful login (e.g., save token, redirect user)\r\n      console.log('Login successful:', response.data);\r\n    } catch (error) {\r\n      setErrorMessage('Invalid email or password');\r\n      console.error('Login error:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <h2>Login to Your Account</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"email\"\r\n          placeholder=\"Email\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n          required\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          required\r\n        />\r\n        {errorMessage && <p className=\"error\">{errorMessage}</p>}\r\n        <button type=\"submit\">Login</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;*/\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport '../styles/Login.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [role, setRole] = useState(\"doctor\");\n  const [showPassword, setShowPassword] = useState(false);\n  const [error, setError] = useState(\"\");\n  const navigate = useNavigate();\n  const handleLogin = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.post(\"http://localhost:8070/api/login\", {\n        email,\n        password,\n        role\n      });\n      if (response.data.success) {\n        navigate(`/${role}-home`); // Redirect based on role\n      } else {\n        setError(\"Invalid credentials\");\n      }\n    } catch (error) {\n      setError(\"Error logging in\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Welcome Back!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Login Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleLogin,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"role-selection\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          id: \"doctor\",\n          name: \"role\",\n          value: \"doctor\",\n          checked: role === \"doctor\",\n          onChange: () => setRole(\"doctor\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"doctor\",\n          children: \"Doctor\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          id: \"clinical\",\n          name: \"role\",\n          value: \"clinical\",\n          checked: role === \"clinical\",\n          onChange: () => setRole(\"clinical\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"clinical\",\n          children: \"Clinical Staff\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          id: \"admin\",\n          name: \"role\",\n          value: \"admin\",\n          checked: role === \"admin\",\n          onChange: () => setRole(\"admin\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"admin\",\n          children: \"Admin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"Email or Username\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: showPassword ? \"text\" : \"password\",\n        placeholder: \"Password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"show-password\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: showPassword,\n          onChange: () => setShowPassword(!showPassword)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Show Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Forgot Password? \", /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"/forgot-password\",\n        children: \"Reset it\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 26\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Don\\u2019t have an account? \", /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"/register\",\n        children: \"Register Now\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 32\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"gNg1iYfTI7ZlYqCAHzS2jVrGYws=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","axios","useNavigate","jsxDEV","_jsxDEV","Login","_s","email","setEmail","password","setPassword","role","setRole","showPassword","setShowPassword","error","setError","navigate","handleLogin","e","preventDefault","response","post","data","success","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","id","name","value","checked","onChange","htmlFor","placeholder","target","required","href","_c","$RefreshReg$"],"sources":["E:/5th semester/Software_Project/MedicalClinicWebApp/FRONTEND/src/components/Login.js"],"sourcesContent":["/*import React, { useState } from 'react';\r\nimport { login } from '../api';\r\nimport './Login.css'; // Create a separate CSS file for styling\r\n\r\nconst Login = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setErrorMessage('');\r\n\r\n    try {\r\n      const response = await login({ email, password });\r\n      // Handle successful login (e.g., save token, redirect user)\r\n      console.log('Login successful:', response.data);\r\n    } catch (error) {\r\n      setErrorMessage('Invalid email or password');\r\n      console.error('Login error:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <h2>Login to Your Account</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"email\"\r\n          placeholder=\"Email\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n          required\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          required\r\n        />\r\n        {errorMessage && <p className=\"error\">{errorMessage}</p>}\r\n        <button type=\"submit\">Login</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;*/\r\n\r\nimport React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport '../styles/Login.css';\r\n\r\nfunction Login() {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [role, setRole] = useState(\"doctor\");\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n  const navigate = useNavigate();\r\n\r\n  const handleLogin = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await axios.post(\"http://localhost:8070/api/login\", {\r\n        email,\r\n        password,\r\n        role,\r\n      });\r\n      if (response.data.success) {\r\n        navigate(`/${role}-home`); // Redirect based on role\r\n      } else {\r\n        setError(\"Invalid credentials\");\r\n      }\r\n    } catch (error) {\r\n      setError(\"Error logging in\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <h2>Welcome Back!</h2>\r\n      <h3>Login Page</h3>\r\n      <form onSubmit={handleLogin}>\r\n        <div className=\"role-selection\">\r\n          <input\r\n            type=\"radio\"\r\n            id=\"doctor\"\r\n            name=\"role\"\r\n            value=\"doctor\"\r\n            checked={role === \"doctor\"}\r\n            onChange={() => setRole(\"doctor\")}\r\n          />\r\n          <label htmlFor=\"doctor\">Doctor</label>\r\n          \r\n          <input\r\n            type=\"radio\"\r\n            id=\"clinical\"\r\n            name=\"role\"\r\n            value=\"clinical\"\r\n            checked={role === \"clinical\"}\r\n            onChange={() => setRole(\"clinical\")}\r\n          />\r\n          <label htmlFor=\"clinical\">Clinical Staff</label>\r\n\r\n          <input\r\n            type=\"radio\"\r\n            id=\"admin\"\r\n            name=\"role\"\r\n            value=\"admin\"\r\n            checked={role === \"admin\"}\r\n            onChange={() => setRole(\"admin\")}\r\n          />\r\n          <label htmlFor=\"admin\">Admin</label>\r\n        </div>\r\n\r\n        <input\r\n          type=\"email\"\r\n          placeholder=\"Email or Username\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n          required\r\n        />\r\n        <input\r\n          type={showPassword ? \"text\" : \"password\"}\r\n          placeholder=\"Password\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          required\r\n        />\r\n        <div className=\"show-password\">\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={showPassword}\r\n            onChange={() => setShowPassword(!showPassword)}\r\n          />\r\n          <label>Show Password</label>\r\n        </div>\r\n\r\n        <button type=\"submit\">Login</button>\r\n        {error && <p className=\"error\">{error}</p>}\r\n      </form>\r\n      <p>\r\n        Forgot Password? <a href=\"/forgot-password\">Reset it</a>\r\n      </p>\r\n      <p>\r\n        Don’t have an account? <a href=\"/register\">Register Now</a>\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}