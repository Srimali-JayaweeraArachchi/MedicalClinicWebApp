{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\srimali\\\\Desktop\\\\Medical New\\\\MedicalClinicWebApp\\\\FRONTEND\\\\src\\\\components\\\\Sidebar.js\";\n/*import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport '../styles/Sidebar.css';\r\n\r\nconst preventNavigation = (e, targetPath) => {\r\n  if (window.location.pathname === targetPath) {\r\n    e.preventDefault(); // Prevent navigation if already on the target page\r\n  }\r\n};\r\n\r\nconst Sidebar = () => {\r\n  const sidebarLinks = [\r\n    { path: '/doctor-home', label: 'Dashboard' },\r\n    { path: '/doctor-home/appointments', label: 'Appointments' },\r\n    { path: '/doctor-home/patients', label: 'Patients' },\r\n    { path: '/doctor-home/reports', label: 'Reports' },\r\n    { path: '/doctor-home/prescriptions', label: 'Prescriptions' },\r\n    { path: '/doctor-home/settings', label: 'Settings' },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"sidebar\">\r\n      <ul>\r\n        {sidebarLinks.map((link) => (\r\n          <li key={link.path}>\r\n            <NavLink\r\n              to={link.path}\r\n              end\r\n              className={({ isActive }) => (isActive ? 'active' : '')}\r\n              onClick={(e) => preventNavigation(e, link.path)}\r\n            >\r\n              {link.label}\r\n            </NavLink>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sidebar;*/\n\nimport React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport '../styles/Sidebar.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Sidebar = ({\n  role\n}) => {\n  // Sidebar links based on role\n  const sidebarLinks = {\n    doctor: [{\n      path: '/doctor-home',\n      label: 'Dashboard'\n    }, {\n      path: '/appointments',\n      label: 'Appointments'\n    }, {\n      path: '/patients',\n      label: 'Patients'\n    }, {\n      path: '/reports',\n      label: 'Reports'\n    }, {\n      path: '/prescriptions',\n      label: 'Prescriptions'\n    }, {\n      path: '/settings',\n      label: 'Settings'\n    } // Doctor's settings\n    ],\n    clinicalStaff: [{\n      path: '/clinical-home',\n      label: 'Dashboard'\n    }, {\n      path: '/bill',\n      label: 'Bill'\n    }, {\n      path: '/report',\n      label: 'Report'\n    }, {\n      path: '/clinical-settings',\n      label: 'Settings'\n    } // Clinical staff's settings\n    ]\n  };\n\n  // Choose links based on role\n  const links = sidebarLinks[role] || [];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sidebar\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"sidebar-title\",\n      children: \"CarePlus\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"sidebar-links\",\n      children: links.map(link => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"sidebar-item\",\n        children: /*#__PURE__*/_jsxDEV(NavLink, {\n          to: link.path,\n          end: true,\n          className: ({\n            isActive\n          }) => isActive ? 'sidebar-link active' : 'sidebar-link',\n          children: link.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this)\n      }, link.path, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n_c = Sidebar;\nexport default Sidebar;\nvar _c;\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"names":["React","NavLink","jsxDEV","_jsxDEV","Sidebar","role","sidebarLinks","doctor","path","label","clinicalStaff","links","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","link","to","end","isActive","_c","$RefreshReg$"],"sources":["C:/Users/srimali/Desktop/Medical New/MedicalClinicWebApp/FRONTEND/src/components/Sidebar.js"],"sourcesContent":["/*import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport '../styles/Sidebar.css';\r\n\r\nconst preventNavigation = (e, targetPath) => {\r\n  if (window.location.pathname === targetPath) {\r\n    e.preventDefault(); // Prevent navigation if already on the target page\r\n  }\r\n};\r\n\r\nconst Sidebar = () => {\r\n  const sidebarLinks = [\r\n    { path: '/doctor-home', label: 'Dashboard' },\r\n    { path: '/doctor-home/appointments', label: 'Appointments' },\r\n    { path: '/doctor-home/patients', label: 'Patients' },\r\n    { path: '/doctor-home/reports', label: 'Reports' },\r\n    { path: '/doctor-home/prescriptions', label: 'Prescriptions' },\r\n    { path: '/doctor-home/settings', label: 'Settings' },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"sidebar\">\r\n      <ul>\r\n        {sidebarLinks.map((link) => (\r\n          <li key={link.path}>\r\n            <NavLink\r\n              to={link.path}\r\n              end\r\n              className={({ isActive }) => (isActive ? 'active' : '')}\r\n              onClick={(e) => preventNavigation(e, link.path)}\r\n            >\r\n              {link.label}\r\n            </NavLink>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sidebar;*/\r\n\r\nimport React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport '../styles/Sidebar.css';\r\n\r\nconst Sidebar = ({ role }) => {\r\n  // Sidebar links based on role\r\n  const sidebarLinks = {\r\n    doctor: [\r\n      { path: '/doctor-home', label: 'Dashboard' },\r\n      { path: '/appointments', label: 'Appointments' },\r\n      { path: '/patients', label: 'Patients' },\r\n      { path: '/reports', label: 'Reports' },\r\n      { path: '/prescriptions', label: 'Prescriptions' },\r\n      { path: '/settings', label: 'Settings' }, // Doctor's settings\r\n    ],\r\n    clinicalStaff: [\r\n      { path: '/clinical-home', label: 'Dashboard' },\r\n      { path: '/bill', label: 'Bill' },\r\n      { path: '/report', label: 'Report' },\r\n      { path: '/clinical-settings', label: 'Settings' }, // Clinical staff's settings\r\n    ],\r\n  };\r\n\r\n  // Choose links based on role\r\n  const links = sidebarLinks[role] || [];\r\n\r\n  return (\r\n    <div className=\"sidebar\">\r\n      <h2 className=\"sidebar-title\">CarePlus</h2>\r\n      <ul className=\"sidebar-links\">\r\n        {links.map((link) => (\r\n          <li key={link.path} className=\"sidebar-item\">\r\n            <NavLink\r\n              to={link.path}\r\n              end\r\n              className={({ isActive }) => (isActive ? 'sidebar-link active' : 'sidebar-link')}\r\n            >\r\n              {link.label}\r\n            </NavLink>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,QAAQ,kBAAkB;AAC1C,OAAO,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/B,MAAMC,OAAO,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EAC5B;EACA,MAAMC,YAAY,GAAG;IACnBC,MAAM,EAAE,CACN;MAAEC,IAAI,EAAE,cAAc;MAAEC,KAAK,EAAE;IAAY,CAAC,EAC5C;MAAED,IAAI,EAAE,eAAe;MAAEC,KAAK,EAAE;IAAe,CAAC,EAChD;MAAED,IAAI,EAAE,WAAW;MAAEC,KAAK,EAAE;IAAW,CAAC,EACxC;MAAED,IAAI,EAAE,UAAU;MAAEC,KAAK,EAAE;IAAU,CAAC,EACtC;MAAED,IAAI,EAAE,gBAAgB;MAAEC,KAAK,EAAE;IAAgB,CAAC,EAClD;MAAED,IAAI,EAAE,WAAW;MAAEC,KAAK,EAAE;IAAW,CAAC,CAAE;IAAA,CAC3C;IACDC,aAAa,EAAE,CACb;MAAEF,IAAI,EAAE,gBAAgB;MAAEC,KAAK,EAAE;IAAY,CAAC,EAC9C;MAAED,IAAI,EAAE,OAAO;MAAEC,KAAK,EAAE;IAAO,CAAC,EAChC;MAAED,IAAI,EAAE,SAAS;MAAEC,KAAK,EAAE;IAAS,CAAC,EACpC;MAAED,IAAI,EAAE,oBAAoB;MAAEC,KAAK,EAAE;IAAW,CAAC,CAAE;IAAA;EAEvD,CAAC;;EAED;EACA,MAAME,KAAK,GAAGL,YAAY,CAACD,IAAI,CAAC,IAAI,EAAE;EAEtC,oBACEF,OAAA;IAAKS,SAAS,EAAC,SAAS;IAAAC,QAAA,gBACtBV,OAAA;MAAIS,SAAS,EAAC,eAAe;MAAAC,QAAA,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC3Cd,OAAA;MAAIS,SAAS,EAAC,eAAe;MAAAC,QAAA,EAC1BF,KAAK,CAACO,GAAG,CAAEC,IAAI,iBACdhB,OAAA;QAAoBS,SAAS,EAAC,cAAc;QAAAC,QAAA,eAC1CV,OAAA,CAACF,OAAO;UACNmB,EAAE,EAAED,IAAI,CAACX,IAAK;UACda,GAAG;UACHT,SAAS,EAAEA,CAAC;YAAEU;UAAS,CAAC,KAAMA,QAAQ,GAAG,qBAAqB,GAAG,cAAgB;UAAAT,QAAA,EAEhFM,IAAI,CAACV;QAAK;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ;MAAC,GAPHE,IAAI,CAACX,IAAI;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAQd,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACM,EAAA,GAxCInB,OAAO;AA0Cb,eAAeA,OAAO;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}