{"ast":null,"code":"var _jsxFileName = \"E:\\\\5th semester\\\\Software_Project\\\\MedicalClinicWebApp\\\\frontend\\\\src\\\\App.js\";\n/*import React from 'react'; \r\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\r\nimport Login from './components/Login';\r\nimport Signup from './components/Signup'; // Import the Signup component\r\nimport DoctorHome from './components/DoctorHome'; // Updated to match the case\r\nimport ClinicalHome from './components/ClinicalHome';\r\nimport AdminHome from './components/AdminHome';\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Routes>\r\n        <Route path=\"/\" element={<Login />} />\r\n        <Route path=\"/signup\" element={<Signup />} /> \r\n        <Route path=\"/doctor-home\" element={<DoctorHome />} />\r\n        <Route path=\"/clinical-home\" element={<ClinicalHome />} />\r\n        <Route path=\"/admin-home\" element={<AdminHome />} />\r\n      </Routes>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;*/\n\n/*import React from 'react'; \r\nimport { BrowserRouter as Router, Route, Routes, Navigate } from 'react-router-dom';\r\nimport Login from './components/Login';\r\nimport Signup from './components/Signup';\r\nimport DoctorHome from './components/DoctorHome';\r\nimport ClinicalHome from './components/ClinicalHome';\r\nimport AdminHome from './components/AdminHome';\r\n//import './styles/App.css'; // Import global styles if needed\r\n\r\n// Simulate authentication check for demonstration purposes\r\nconst isAuthenticated = () => {\r\n  return !!localStorage.getItem('token'); // Adjust based on actual auth implementation\r\n};\r\n\r\n// Protected Route Component\r\nconst ProtectedRoute = ({ children }) => {\r\n  return isAuthenticated() ? children : <Navigate to=\"/\" />;\r\n};\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Routes>\r\n        \r\n        <Route path=\"/\" element={<Login />} />\r\n        <Route path=\"/signup\" element={<Signup />} />\r\n\r\n        \r\n        <Route \r\n          path=\"/doctor-home\" \r\n          element={\r\n            <ProtectedRoute>\r\n              <DoctorHome />\r\n            </ProtectedRoute>\r\n          } \r\n        />\r\n        <Route \r\n          path=\"/clinical-home\" \r\n          element={\r\n            <ProtectedRoute>\r\n              <ClinicalHome />\r\n            </ProtectedRoute>\r\n          } \r\n        />\r\n        <Route \r\n          path=\"/admin-home\" \r\n          element={\r\n            <ProtectedRoute>\r\n              <AdminHome />\r\n            </ProtectedRoute>\r\n          } \r\n        />\r\n\r\n        \r\n        <Route path=\"*\" element={<h1>404: Page Not Found</h1>} />\r\n      </Routes>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;*/\n\nimport React from 'react';\nimport { BrowserRouter as Router, Route, Routes, Navigate } from 'react-router-dom';\nimport Login from './components/Login';\nimport Signup from './components/Signup';\nimport DoctorHome from './components/DoctorHome';\nimport ClinicalHome from './components/ClinicalHome';\nimport AdminHome from './components/AdminHome';\n//import './styles/App.css'; // Import global styles if needed\n\nimport jwt_decode from 'jwt-decode';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getFullNameFromToken = () => {\n  const token = localStorage.getItem(\"token\");\n  if (token) {\n    const decodedToken = jwt_decode(token); // Decode the token\n    return decodedToken.name; // Extract the name field\n  }\n  return null;\n};\nconst fullName = getFullNameFromToken();\nconsole.log(\"Full Name:\", fullName);\n\n// Simulate authentication check for demonstration purposes\nconst isAuthenticated = () => {\n  const token = localStorage.getItem('token');\n  console.log('Token:', token); // Log the token to check if it exists\n  return !!token;\n};\n\n// Protected Route Component\nconst ProtectedRoute = ({\n  children\n}) => {\n  return isAuthenticated() ? children : /*#__PURE__*/_jsxDEV(Navigate, {\n    to: \"/\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 41\n  }, this);\n};\n_c = ProtectedRoute;\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/signup\",\n        element: /*#__PURE__*/_jsxDEV(Signup, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 40\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/doctor-home\",\n        element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n          children: /*#__PURE__*/_jsxDEV(DoctorHome, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/clinical-home\",\n        element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n          children: /*#__PURE__*/_jsxDEV(ClinicalHome, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/admin-home\",\n        element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n          children: /*#__PURE__*/_jsxDEV(AdminHome, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"*\",\n        element: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"404: Page Not Found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 5\n  }, this);\n}\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"ProtectedRoute\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","BrowserRouter","Router","Route","Routes","Navigate","Login","Signup","DoctorHome","ClinicalHome","AdminHome","jwt_decode","jsxDEV","_jsxDEV","getFullNameFromToken","token","localStorage","getItem","decodedToken","name","fullName","console","log","isAuthenticated","ProtectedRoute","children","to","fileName","_jsxFileName","lineNumber","columnNumber","_c","App","path","element","_c2","$RefreshReg$"],"sources":["E:/5th semester/Software_Project/MedicalClinicWebApp/frontend/src/App.js"],"sourcesContent":["\r\n\r\n/*import React from 'react'; \r\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\r\nimport Login from './components/Login';\r\nimport Signup from './components/Signup'; // Import the Signup component\r\nimport DoctorHome from './components/DoctorHome'; // Updated to match the case\r\nimport ClinicalHome from './components/ClinicalHome';\r\nimport AdminHome from './components/AdminHome';\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Routes>\r\n        <Route path=\"/\" element={<Login />} />\r\n        <Route path=\"/signup\" element={<Signup />} /> \r\n        <Route path=\"/doctor-home\" element={<DoctorHome />} />\r\n        <Route path=\"/clinical-home\" element={<ClinicalHome />} />\r\n        <Route path=\"/admin-home\" element={<AdminHome />} />\r\n      </Routes>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;*/\r\n\r\n/*import React from 'react'; \r\nimport { BrowserRouter as Router, Route, Routes, Navigate } from 'react-router-dom';\r\nimport Login from './components/Login';\r\nimport Signup from './components/Signup';\r\nimport DoctorHome from './components/DoctorHome';\r\nimport ClinicalHome from './components/ClinicalHome';\r\nimport AdminHome from './components/AdminHome';\r\n//import './styles/App.css'; // Import global styles if needed\r\n\r\n// Simulate authentication check for demonstration purposes\r\nconst isAuthenticated = () => {\r\n  return !!localStorage.getItem('token'); // Adjust based on actual auth implementation\r\n};\r\n\r\n// Protected Route Component\r\nconst ProtectedRoute = ({ children }) => {\r\n  return isAuthenticated() ? children : <Navigate to=\"/\" />;\r\n};\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Routes>\r\n        \r\n        <Route path=\"/\" element={<Login />} />\r\n        <Route path=\"/signup\" element={<Signup />} />\r\n\r\n        \r\n        <Route \r\n          path=\"/doctor-home\" \r\n          element={\r\n            <ProtectedRoute>\r\n              <DoctorHome />\r\n            </ProtectedRoute>\r\n          } \r\n        />\r\n        <Route \r\n          path=\"/clinical-home\" \r\n          element={\r\n            <ProtectedRoute>\r\n              <ClinicalHome />\r\n            </ProtectedRoute>\r\n          } \r\n        />\r\n        <Route \r\n          path=\"/admin-home\" \r\n          element={\r\n            <ProtectedRoute>\r\n              <AdminHome />\r\n            </ProtectedRoute>\r\n          } \r\n        />\r\n\r\n        \r\n        <Route path=\"*\" element={<h1>404: Page Not Found</h1>} />\r\n      </Routes>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;*/\r\n\r\nimport React from 'react'; \r\nimport { BrowserRouter as Router, Route, Routes, Navigate } from 'react-router-dom';\r\nimport Login from './components/Login';\r\nimport Signup from './components/Signup';\r\nimport DoctorHome from './components/DoctorHome';\r\nimport ClinicalHome from './components/ClinicalHome';\r\nimport AdminHome from './components/AdminHome';\r\n//import './styles/App.css'; // Import global styles if needed\r\n\r\nimport jwt_decode from 'jwt-decode';\r\n\r\nconst getFullNameFromToken = () => {\r\n  const token = localStorage.getItem(\"token\");\r\n  if (token) {\r\n    const decodedToken = jwt_decode(token); // Decode the token\r\n    return decodedToken.name; // Extract the name field\r\n  }\r\n  return null;\r\n};\r\n\r\nconst fullName = getFullNameFromToken();\r\nconsole.log(\"Full Name:\", fullName);\r\n\r\n\r\n// Simulate authentication check for demonstration purposes\r\nconst isAuthenticated = () => {\r\n  const token = localStorage.getItem('token');\r\n  console.log('Token:', token); // Log the token to check if it exists\r\n  return !!token;\r\n};\r\n\r\n// Protected Route Component\r\nconst ProtectedRoute = ({ children }) => {\r\n  return isAuthenticated() ? children : <Navigate to=\"/\" />;\r\n};\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Routes>\r\n        \r\n        {/* Public Routes */}\r\n        <Route path=\"/\" element={<Login />} />\r\n        <Route path=\"/signup\" element={<Signup />} />\r\n\r\n        {/* Protected Routes */}\r\n        <Route \r\n          path=\"/doctor-home\" \r\n          element={\r\n            <ProtectedRoute>\r\n              <DoctorHome />\r\n            </ProtectedRoute>\r\n          } \r\n        />\r\n        <Route \r\n          path=\"/clinical-home\" \r\n          element={\r\n            <ProtectedRoute>\r\n              <ClinicalHome />\r\n            </ProtectedRoute>\r\n          } \r\n        />\r\n        <Route \r\n          path=\"/admin-home\" \r\n          element={\r\n            <ProtectedRoute>\r\n              <AdminHome />\r\n            </ProtectedRoute>\r\n          } \r\n        />\r\n\r\n        {/* 404 Route */}\r\n        <Route path=\"*\" element={<h1>404: Page Not Found</h1>} />\r\n      </Routes>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}