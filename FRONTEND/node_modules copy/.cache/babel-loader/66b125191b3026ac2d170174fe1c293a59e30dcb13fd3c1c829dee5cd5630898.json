{"ast":null,"code":"var _jsxFileName = \"E:\\\\5th semester\\\\Software_Project\\\\MedicalClinicWebApp\\\\FRONTEND\\\\src\\\\components\\\\SignupDoctor.js\",\n  _s = $RefreshSig$();\n/*import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction SignupDoctor() {\r\n  const [fullName, setFullName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [medicalLicenseNumber, setMedicalLicenseNumber] = useState(\"\");\r\n  const [specialization, setSpecialization] = useState(\"\");\r\n  const [yearsOfExperience, setYearsOfExperience] = useState(\"\");\r\n  const [phoneNumber, setPhoneNumber] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [passwordConfirmation, setPasswordConfirmation] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    // Check if passwords match\r\n    if (password !== passwordConfirmation) {\r\n      setError(\"Passwords do not match\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await axios.post(\"http://localhost:8070/api/auth/register\", {\r\n        fullName,\r\n        email,\r\n        medicalLicenseNumber,\r\n        specialization,\r\n        yearsOfExperience,\r\n        phoneNumber,\r\n        password,\r\n      });\r\n      \r\n      console.log(response.data); // Handle success\r\n      if (response.data.success) {\r\n        // Optionally, navigate to another page on success\r\n        // navigate(\"/doctor-home\"); \r\n        alert(\"Registration successful!\");\r\n      } else {\r\n        setError(\"Registration failed. Please try again.\");\r\n      }\r\n    } catch (error) {\r\n      setError(\"Error registering user. Please try again.\");\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Full Name\"\r\n        value={fullName}\r\n        onChange={(e) => setFullName(e.target.value)}\r\n        required\r\n      />\r\n      <input\r\n        type=\"email\"\r\n        placeholder=\"Email\"\r\n        value={email}\r\n        onChange={(e) => setEmail(e.target.value)}\r\n        required\r\n      />\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Medical License Number\"\r\n        value={medicalLicenseNumber}\r\n        onChange={(e) => setMedicalLicenseNumber(e.target.value)}\r\n        required\r\n      />\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Specialization\"\r\n        value={specialization}\r\n        onChange={(e) => setSpecialization(e.target.value)}\r\n        required\r\n      />\r\n      <input\r\n        type=\"number\"\r\n        placeholder=\"Years of Experience\"\r\n        value={yearsOfExperience}\r\n        onChange={(e) => setYearsOfExperience(e.target.value)}\r\n        required\r\n      />\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Phone Number\"\r\n        value={phoneNumber}\r\n        onChange={(e) => setPhoneNumber(e.target.value)}\r\n        required\r\n      />\r\n      <input\r\n        type=\"password\"\r\n        placeholder=\"Password\"\r\n        value={password}\r\n        onChange={(e) => setPassword(e.target.value)}\r\n        required\r\n      />\r\n      <input\r\n        type=\"password\"\r\n        placeholder=\"Password Confirmation\"\r\n        value={passwordConfirmation}\r\n        onChange={(e) => setPasswordConfirmation(e.target.value)}\r\n        required\r\n      />\r\n      <div className=\"terms\">\r\n        <input type=\"checkbox\" required /> I agree to the terms and conditions.\r\n      </div>\r\n      <button type=\"submit\">Register</button>\r\n      {error && <p className=\"error\">{error}</p>}\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default SignupDoctor;*/\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SignupDoctor() {\n  _s();\n  const [fullName, setFullName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [medicalLicenseNumber, setMedicalLicenseNumber] = useState(\"\");\n  const [specialization, setSpecialization] = useState(\"\");\n  const [yearsOfExperience, setYearsOfExperience] = useState(\"\");\n  const [phoneNumber, setPhoneNumber] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [passwordConfirmation, setPasswordConfirmation] = useState(\"\"); // State for password confirmation\n  const [error, setError] = useState(\"\");\n  const handleSubmit = async e => {\n    e.preventDefault();\n    // Client-side validation: Check if password and passwordConfirmation match\n    if (password !== passwordConfirmation) {\n      setError(\"Passwords do not match!\");\n      return;\n    }\n    try {\n      const response = await axios.post(\"http://localhost:8070/api/auth/register\", {\n        fullName,\n        email,\n        medicalLicenseNumber,\n        specialization,\n        yearsOfExperience,\n        phoneNumber,\n        password // Only the password gets sent to backend\n      });\n      console.log(response.data); // Handle success\n    } catch (error) {\n      setError(\"Error registering user\");\n      console.error(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Full Name\",\n      value: fullName,\n      onChange: e => setFullName(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      placeholder: \"Email\",\n      value: email,\n      onChange: e => setEmail(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Medical License Number\",\n      value: medicalLicenseNumber,\n      onChange: e => setMedicalLicenseNumber(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Specialization\",\n      value: specialization,\n      onChange: e => setSpecialization(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      placeholder: \"Years of Experience\",\n      value: yearsOfExperience,\n      onChange: e => setYearsOfExperience(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Phone Number\",\n      value: phoneNumber,\n      onChange: e => setPhoneNumber(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"Password\",\n      value: password,\n      onChange: e => setPassword(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"Password Confirmation\",\n      value: passwordConfirmation,\n      onChange: e => setPasswordConfirmation(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"terms\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this), \" I agree to the terms and conditions.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 159,\n    columnNumber: 5\n  }, this);\n}\n_s(SignupDoctor, \"iqGoYdsRG9IhRpYcfgn3bbI8TxI=\");\n_c = SignupDoctor;\nexport default SignupDoctor;\nvar _c;\n$RefreshReg$(_c, \"SignupDoctor\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","SignupDoctor","_s","fullName","setFullName","email","setEmail","medicalLicenseNumber","setMedicalLicenseNumber","specialization","setSpecialization","yearsOfExperience","setYearsOfExperience","phoneNumber","setPhoneNumber","password","setPassword","passwordConfirmation","setPasswordConfirmation","error","setError","handleSubmit","e","preventDefault","response","post","console","log","data","onSubmit","children","type","placeholder","value","onChange","target","required","fileName","_jsxFileName","lineNumber","columnNumber","className","_c","$RefreshReg$"],"sources":["E:/5th semester/Software_Project/MedicalClinicWebApp/FRONTEND/src/components/SignupDoctor.js"],"sourcesContent":["\r\n/*import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction SignupDoctor() {\r\n  const [fullName, setFullName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [medicalLicenseNumber, setMedicalLicenseNumber] = useState(\"\");\r\n  const [specialization, setSpecialization] = useState(\"\");\r\n  const [yearsOfExperience, setYearsOfExperience] = useState(\"\");\r\n  const [phoneNumber, setPhoneNumber] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [passwordConfirmation, setPasswordConfirmation] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    // Check if passwords match\r\n    if (password !== passwordConfirmation) {\r\n      setError(\"Passwords do not match\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await axios.post(\"http://localhost:8070/api/auth/register\", {\r\n        fullName,\r\n        email,\r\n        medicalLicenseNumber,\r\n        specialization,\r\n        yearsOfExperience,\r\n        phoneNumber,\r\n        password,\r\n      });\r\n      \r\n      console.log(response.data); // Handle success\r\n      if (response.data.success) {\r\n        // Optionally, navigate to another page on success\r\n        // navigate(\"/doctor-home\"); \r\n        alert(\"Registration successful!\");\r\n      } else {\r\n        setError(\"Registration failed. Please try again.\");\r\n      }\r\n    } catch (error) {\r\n      setError(\"Error registering user. Please try again.\");\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Full Name\"\r\n        value={fullName}\r\n        onChange={(e) => setFullName(e.target.value)}\r\n        required\r\n      />\r\n      <input\r\n        type=\"email\"\r\n        placeholder=\"Email\"\r\n        value={email}\r\n        onChange={(e) => setEmail(e.target.value)}\r\n        required\r\n      />\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Medical License Number\"\r\n        value={medicalLicenseNumber}\r\n        onChange={(e) => setMedicalLicenseNumber(e.target.value)}\r\n        required\r\n      />\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Specialization\"\r\n        value={specialization}\r\n        onChange={(e) => setSpecialization(e.target.value)}\r\n        required\r\n      />\r\n      <input\r\n        type=\"number\"\r\n        placeholder=\"Years of Experience\"\r\n        value={yearsOfExperience}\r\n        onChange={(e) => setYearsOfExperience(e.target.value)}\r\n        required\r\n      />\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Phone Number\"\r\n        value={phoneNumber}\r\n        onChange={(e) => setPhoneNumber(e.target.value)}\r\n        required\r\n      />\r\n      <input\r\n        type=\"password\"\r\n        placeholder=\"Password\"\r\n        value={password}\r\n        onChange={(e) => setPassword(e.target.value)}\r\n        required\r\n      />\r\n      <input\r\n        type=\"password\"\r\n        placeholder=\"Password Confirmation\"\r\n        value={passwordConfirmation}\r\n        onChange={(e) => setPasswordConfirmation(e.target.value)}\r\n        required\r\n      />\r\n      <div className=\"terms\">\r\n        <input type=\"checkbox\" required /> I agree to the terms and conditions.\r\n      </div>\r\n      <button type=\"submit\">Register</button>\r\n      {error && <p className=\"error\">{error}</p>}\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default SignupDoctor;*/\r\n\r\nimport React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction SignupDoctor() {\r\n  const [fullName, setFullName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [medicalLicenseNumber, setMedicalLicenseNumber] = useState(\"\");\r\n  const [specialization, setSpecialization] = useState(\"\");\r\n  const [yearsOfExperience, setYearsOfExperience] = useState(\"\");\r\n  const [phoneNumber, setPhoneNumber] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [passwordConfirmation, setPasswordConfirmation] = useState(\"\"); // State for password confirmation\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    // Client-side validation: Check if password and passwordConfirmation match\r\n    if (password !== passwordConfirmation) {\r\n      setError(\"Passwords do not match!\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await axios.post(\"http://localhost:8070/api/auth/register\", {\r\n        fullName,\r\n        email,\r\n        medicalLicenseNumber,\r\n        specialization,\r\n        yearsOfExperience,\r\n        phoneNumber,\r\n        password, // Only the password gets sent to backend\r\n      });\r\n      console.log(response.data); // Handle success\r\n    } catch (error) {\r\n      setError(\"Error registering user\");\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Full Name\"\r\n        value={fullName}\r\n        onChange={(e) => setFullName(e.target.value)}\r\n        required\r\n      />\r\n      <input\r\n        type=\"email\"\r\n        placeholder=\"Email\"\r\n        value={email}\r\n        onChange={(e) => setEmail(e.target.value)}\r\n        required\r\n      />\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Medical License Number\"\r\n        value={medicalLicenseNumber}\r\n        onChange={(e) => setMedicalLicenseNumber(e.target.value)}\r\n        required\r\n      />\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Specialization\"\r\n        value={specialization}\r\n        onChange={(e) => setSpecialization(e.target.value)}\r\n        required\r\n      />\r\n      <input\r\n        type=\"number\"\r\n        placeholder=\"Years of Experience\"\r\n        value={yearsOfExperience}\r\n        onChange={(e) => setYearsOfExperience(e.target.value)}\r\n        required\r\n      />\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Phone Number\"\r\n        value={phoneNumber}\r\n        onChange={(e) => setPhoneNumber(e.target.value)}\r\n        required\r\n      />\r\n      <input\r\n        type=\"password\"\r\n        placeholder=\"Password\"\r\n        value={password}\r\n        onChange={(e) => setPassword(e.target.value)}\r\n        required\r\n      />\r\n      {/* Add the Password Confirmation input here */}\r\n      <input\r\n        type=\"password\"\r\n        placeholder=\"Password Confirmation\"\r\n        value={passwordConfirmation}\r\n        onChange={(e) => setPasswordConfirmation(e.target.value)}\r\n        required\r\n      />\r\n      <div className=\"terms\">\r\n        <input type=\"checkbox\" required /> I agree to the terms and conditions.\r\n      </div>\r\n      <button type=\"submit\">Register</button>\r\n      {error && <p className=\"error\">{error}</p>}\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default SignupDoctor;\r\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}